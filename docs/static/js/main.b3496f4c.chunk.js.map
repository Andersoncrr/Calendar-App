{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","actions/ui.js","components/calendar/CalendarModal.js","components/calendar/CalendarEvent.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","components/loading/Loading.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","startLogin","email","password","dispatch","a","resp","json","ok","setItem","Date","getTime","login","uid","name","Swal","fire","msg","chekingFinish","user","starLogout","clear","logout","useForm","useState","values","setValues","handleInputChange","target","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","handleLogin","preventDefault","className","onSubmit","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","title","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","setTimeout","yesterday","subtract","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","inputProps","width","background","color","_d","dateFormat","timeFormat","closeOnSelect","closeOnClickOutside","isValidDate","current","isAfter","autoComplete","rows","CalendarEvent","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lasView","setLasView","eventos","startAccessor","endAccessor","height","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","Loading","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3496f4c.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal : '[ui] Open modal',\r\n    uiCloseModal : '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Logout event',\r\n    eventStartAddNew:'[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Updated event',\r\n    eventDeleted: '[event] Deleted event',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true\r\n};\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n};","import { types } from \"../types/types\";\r\n\r\n// {\r\n//   id: 'asdasdasdasd1asda',\r\n//   title: \"Cumpleaños del jefe\",\r\n//   start: moment().toDate(),\r\n//   end: moment().add(2, \"hours\").toDate(),\r\n//   notes: \"Comprar el pastel\",\r\n//   user: {\r\n//     _id: \"123\",\r\n//     name: \"Anderson\",\r\n//   },\r\n// },\r\n\r\nconst initialState = {\r\n  events: [],\r\n  activeEvent: null,\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.eventSetActive:\r\n      return {\r\n        ...state,\r\n        activeEvent: action.payload,\r\n      };\r\n\r\n    case types.eventAddNew:\r\n      return {\r\n        ...state,\r\n        events: [...state.events, action.payload],\r\n      };\r\n\r\n    case types.eventClearActiveEvent:\r\n      return {\r\n        ...state,\r\n        activeEvent: null,\r\n      };\r\n\r\n    case types.eventUpdated:\r\n      return {\r\n        ...state,\r\n        events: state.events.map((e) =>\r\n          e.id === action.payload.id ? action.payload : e\r\n        ),\r\n      };\r\n\r\n    case types.eventDeleted:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter((e) => e.id !== state.activeEvent.id),\r\n        activeEvent: null,\r\n      };\r\n\r\n    case types.eventLoaded:\r\n      return {\r\n        ...state,\r\n        events: [ ...action.payload ]\r\n      }\r\n\r\n      case types.eventLogout:\r\n        return {\r\n          ...initialState\r\n        }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n   \r\n    switch ( action.type ) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n\r\n};\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n\r\n};\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n  return events.map(\r\n    (e) => ({\r\n      ...e,\r\n      end: moment( e.end ).toDate(),\r\n      start: moment( e.start ).toDate()\r\n    }) \r\n  );\r\n};","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch( eventAddNew( event ) );\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventUpdated( event ) );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventDeleted() );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            const events = prepareEvents( body.eventos );\r\n            dispatch( eventLoaded( events ) );\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n});","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n};\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth/new', { email, password, name }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n};\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            dispatch(chekingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nconst chekingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const starLogout = () => {\r\n    return (dispatch) => {\r\n\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n        dispatch(eventLogout());\r\n    }\r\n};\r\n\r\nconst logout = () => ({ type: types.authLogout });","import { useState } from \"react\"\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    };\r\n\r\n    return [ values, handleInputChange ];\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { startLogin, startRegister } from \"../../actions/auth\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport \"./login.css\";\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const [formLoginValues, handleLoginInputChange] = useForm({\r\n    lEmail: \"\",\r\n    lPassword: \"\",\r\n  });\r\n\r\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n    rName: \"\",\r\n    rEmail: \"\",\r\n    rPassword1: \"\",\r\n    rPassword2: \"\",\r\n  });\r\n\r\n  const { lEmail, lPassword } = formLoginValues;\r\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n  \r\n  const handleLogin = async(e) => {\r\n      e.preventDefault();\r\n      await dispatch(startLogin(lEmail, lPassword));\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (rPassword1 !== rPassword2) {\r\n      return Swal.fire(\r\n        \"Error\",\r\n        \"Las contraseñas deben de ser iguales\",\r\n        \"error\"\r\n      );\r\n    }\r\n\r\n    dispatch(startRegister(rEmail, rPassword1, rName));\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container login-container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 login-form-1\">\r\n          <h3>Ingreso</h3>\r\n          <form onSubmit={handleLogin}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name=\"lEmail\"\r\n                value={lEmail}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"lPassword\"\r\n                value={lPassword}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"col-md-6 login-form-2\">\r\n          <h3>Registro</h3>\r\n          <form onSubmit={handleRegister}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Nombre\"\r\n                name=\"rName\"\r\n                value={rName}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name=\"rEmail\"\r\n                value={rEmail}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"rPassword1\"\r\n                value={rPassword1}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Repita la contraseña\"\r\n                name=\"rPassword2\"\r\n                value={rPassword2}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Crear cuenta\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    {/* <Loading isLoading={isLoading}/> */}\r\n  </>\r\n  )\r\n};\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { starLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { name } = useSelector( state => state.auth );\r\n    const dispatch = useDispatch();\r\n    const handleLogout = () => {\r\n        dispatch( starLogout() );\r\n    };\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick= { handleLogout }\r\n            >\r\n                <span>Salir </span>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                \r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport '../../styles.css';\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DatePicker from 'react-datetime';\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport Swal from 'sweetalert2';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    }\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(2, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { modalOpen } = useSelector( state => state.ui );\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n\r\n    const [ dateStart, setDateStart ] = useState(  now.toDate() );\r\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\r\n    const [ titleValid, setTitleValid ] = useState(true);\r\n    const [ formValues, setFormValues ] = useState(initEvent);\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if ( activeEvent ) {\r\n            setFormValues( activeEvent );\r\n            setDateStart( activeEvent.start );\r\n            setDateEnd( activeEvent.end );\r\n        } else {\r\n            setDateStart( initEvent.start );\r\n            setDateEnd( initEvent.end );\r\n        }\r\n    }, [ activeEvent, setFormValues ]);\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    };\r\n    \r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() );\r\n        setTimeout(() => {\r\n            dispatch( eventClearActiveEvent() );\r\n        }, 200);\r\n        setFormValues( initEvent ); \r\n    };\r\n\r\n    const handleStartDateChange = ( e ) => {\r\n        setDateStart( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e._d\r\n        })\r\n    };\r\n\r\n    const handleEndtDateChange = ( e ) => {\r\n        setDateEnd( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e._d\r\n        })\r\n    };\r\n\r\n    const yesterday = moment(dateStart).subtract(1, 'day')\r\n    const valid = ( current ) => {\r\n    return current.isAfter( yesterday );\r\n    };\r\n\r\n    const handleSubmitForm = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n\r\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\r\n            return Swal.fire('Error', 'La fecha fin debe de ser mayor a la fecha de inicio', 'error');\r\n        };\r\n\r\n        if ( title.trim().length < 2 ) {\r\n            return setTitleValid( false );\r\n        };\r\n\r\n        if ( activeEvent ) {\r\n            dispatch( eventStartUpdate( formValues ) );\r\n        } else {\r\n            dispatch( eventStartAddNew( formValues ) );\r\n        }\r\n        setTitleValid( true );\r\n        closeModal();\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={ modalOpen } \r\n            onRequestClose={ closeModal }\r\n            style={ customStyles }\r\n            closeTimeoutMS={ 200 }\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> {(activeEvent)? 'Editar evento' : 'Nuevo evento'} </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DatePicker\r\n                        inputProps={{\r\n                            style: { width: 250, background: 'black', color: 'white' }\r\n                        }}\r\n                        value={ dateStart }\r\n                        onChange={ handleStartDateChange }\r\n                        dateFormat=\"DD-MM-YYYY\"\r\n                        timeFormat=\"hh:mm A\"\r\n                        closeOnSelect= { true }\r\n                        closeOnClickOutside={ true }\r\n                        \r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DatePicker\r\n                        inputProps={{\r\n                            style: { width: 250, background: 'black', color: 'white' }\r\n                        }}\r\n                        value={ dateEnd }\r\n                        onChange={ handleEndtDateChange }\r\n                        dateFormat=\"DD-MM-YYYY\"\r\n                        timeFormat=\"hh:mm A\"\r\n                        closeOnSelect= { true }\r\n                        closeOnClickOutside={ true }\r\n                        isValidDate = {  valid  }\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={ `form-control ${ !titleValid && 'is-invalid' }` }\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n};\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    \r\n    const { title, user } = event;\r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span>- { user.name } </span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventClearActiveEvent } from '../../actions/events';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\n\r\n\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n\r\n    const handleClickNew = () => {\r\n        dispatch( eventClearActiveEvent() );\r\n        dispatch( uiOpenModal() );\r\n    };\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick= { handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n};\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    };\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n};\r\n","import React, { useEffect, useState } from 'react'\r\nimport {Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector( state => state.calendar );\r\n    const { uid } = useSelector( state => state.auth );\r\n    const [lasView, setLasView] = useState( localStorage.getItem('lastView') || 'month' );\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( eventStartLoading() );\r\n\r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    };\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch( eventSetActive( e ) );\r\n    };\r\n\r\n    const onViewChange = (e) => {\r\n        setLasView(e);\r\n        localStorage.setItem('lastView', e);\r\n    };\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch( eventClearActiveEvent() );\r\n    };\r\n\r\n    const eventStyleGetter =( event, start, end, isSelected ) =>{\r\n\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? 'black' : '#79443b',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                style={{ height: 840 }}\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={ lasView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n            {\r\n                ( activeEvent ) && <DeleteEventFab />\r\n            }\r\n            \r\n            <CalendarModal />\r\n\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport './styleLoading.css';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"center1 container1\">\r\n        <div className=\"loadContainer1\">\r\n            <div className=\"loader2\"></div>\r\n            <div className=\"loader3\"></div>\r\n            <div className=\"loader4\"></div>\r\n        </div>\r\n        <div><span className=\"loading\">\r\n            Loading...</span></div>\r\n    </div >\r\n    );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ?( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/login\" /> )\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { Loading } from '../components/loading/Loading';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(startChecking());\r\n\r\n    }, [dispatch]);\r\n\r\n    if ( checking ) {\r\n        return (<Loading />)\r\n    }\r\n\r\nreturn (\r\n    <Router>\r\n        <div>\r\n            <Switch>\r\n                <PublicRoute\r\n                    exact\r\n                    path=\"/login\"\r\n                    component={LoginScreen}\r\n                    isAuthenticated={ !!uid }\r\n                />\r\n\r\n                <PrivateRoute\r\n                    exact\r\n                    path=\"/\"\r\n                    component={CalendarScreen}\r\n                    isAuthenticated={ !!uid }\r\n                />\r\n\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n        </div>\r\n    </Router>\r\n);\r\n};\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}